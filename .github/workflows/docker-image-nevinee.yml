name: Build qBittorrent_Skip_Satch nevinee

on:
  workflow_dispatch:

jobs:
  build1:
    name: none
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master

      - name: Set Version
        id: set-version
        run: |
          echo "version=$(cat versions/Qbittorrent)_$(cat versions/Libtorrent)-$(cat versions/Build_Time)_nevinee" >> $GITHUB_OUTPUT
          echo "Qbittorrent=$(cat versions/Qbittorrent)" >> $GITHUB_OUTPUT
          echo "Libtorrent=$(cat versions/Libtorrent)" >> $GITHUB_OUTPUT
          echo "Build_Time=$(cat versions/Build_Time)" >> $GITHUB_OUTPUT
          echo "qbitorrent_tag=$(cat versions/qbitorrent_tag)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Buildx
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.nevinee
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64/v8
          push: true
          build-args: |
            Qbittorrent=${{ steps.set-version.outputs.Qbittorrent }}
            Libtorrent=${{ steps.set-version.outputs.Libtorrent }}
            Build_Time=${{ steps.set-version.outputs.Build_Time }}
            qbitorrent_tag=${{ steps.set-version.outputs.qbitorrent_tag }}
          tags: |
             ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch:${{ steps.set-version.outputs.version }}
             ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch:latest_nevinee

  build2:
    name: iyuu
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master

      - name: Set Version
        id: set-version
        run: |
          echo "version=$(cat versions/Qbittorrent)_$(cat versions/Libtorrent)-$(cat versions/Build_Time)_nevinee-iyuu" >> $GITHUB_OUTPUT
          echo "Qbittorrent=$(cat versions/Qbittorrent)" >> $GITHUB_OUTPUT
          echo "Libtorrent=$(cat versions/Libtorrent)" >> $GITHUB_OUTPUT
          echo "Build_Time=$(cat versions/Build_Time)" >> $GITHUB_OUTPUT
          echo "qbitorrent_tag=$(cat versions/qbitorrent_tag)-iyuu" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Buildx
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.nevinee.iyuu
          platforms: |
            linux/amd64
            linux/arm/v7
            linux/arm64/v8
          push: true
          build-args: |
            Qbittorrent=${{ steps.set-version.outputs.Qbittorrent }}
            Libtorrent=${{ steps.set-version.outputs.Libtorrent }}
            Build_Time=${{ steps.set-version.outputs.Build_Time }}
            qbitorrent_tag=${{ steps.set-version.outputs.qbitorrent_tag }}
          tags: |
             ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch:${{ steps.set-version.outputs.version }}
             ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch:latest_nevinee-iyuu

  job5:
    needs: [build1, build2]
    name: 更新DockerHub介绍
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch
          short-description: qBittorrent快速校验版本
          readme-filepath: ./README.md
